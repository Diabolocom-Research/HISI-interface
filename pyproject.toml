[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "asr-interface"
version = "0.1.0"
description = "Real-time Automatic Speech Recognition (ASR) interface with modular architecture"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ASR Interface Contributors", email = "contributors@example.com"}
]
keywords = ["asr", "speech-recognition", "realtime", "whisper", "webrtc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0",
    "pydantic>=2.11.0",
    "python-multipart>=0.0.20",
    "aiofiles>=24.1.0",
    "aiortc>=1.12.0",
    "fastrtc>=0.0.25",
    "librosa>=0.11.0",
    "numpy>=2.2.0,<2.3.0",
    "soundfile>=0.13.0",
    "pydub>=0.25.0",
    "whisper>=1.1.10",
    "whisper-timestamped>=1.15.8",
    "faster-whisper>=1.1.1",
    "ctranslate2>=4.6.0",
    "torch>=2.7.0",
    "torchaudio>=2.7.0",
    "transformers>=4.51.0",
    "gradio>=5.30.0",
    "websockets>=15.0.0",
    "python-dotenv>=1.0.0",
    "jiwer>=3.0.0",
    "tqdm>=4.67.0",
    "requests>=2.32.0",
    "httpx>=0.28.0",
    "huggingface-hub>=0.31.0",
    "safetensors>=0.5.0",
    "tokenizers>=0.21.0",
    "scipy>=1.15.0",
    "scikit-learn>=1.6.0",
    "matplotlib>=3.10.0",
    "plotly>=6.1.0",
    "pandas>=2.2.0",
    "ffmpeg-python>=0.2.0",
    "av>=14.4.0",
    "aioice>=0.10.0",
    "pylibsrtp>=0.12.0",
    "cryptography>=45.0.0",
    "certifi>=2025.4.0",
    "charset-normalizer>=3.4.0",
    "idna>=3.10.0",
    "urllib3>=2.4.0",
    "click>=8.1.0",
    "typer>=0.15.0",
    "rich>=14.0.0",
    "tomlkit>=0.13.0",
    "packaging>=25.0.0",
    "platformdirs>=4.3.0",
    "filelock>=3.18.0",
    "fsspec>=2025.5.0",
    "pooch>=1.8.0",
    "lazy_loader>=0.4.0",
    "numba>=0.61.0",
    "llvmlite>=0.44.0",
    "joblib>=1.5.0",
    "threadpoolctl>=3.6.0",
    "sympy>=1.14.0",
    "mpmath>=1.3.0",
    "fonttools>=4.58.0",
    "kiwisolver>=1.4.0",
    "cycler>=0.12.0",
    "contourpy>=1.3.0",
    "pillow>=11.2.0",
    "python-dateutil>=2.9.0",
    "pytz>=2025.2.0",
    "six>=1.17.0",
    "decorator>=5.2.0",
    "networkx>=3.4.0",
    "future>=1.0.0",
    "more-itertools>=10.7.0",
    "markdown-it-py>=3.0.0",
    "mdurl>=0.1.0",
    "Pygments>=2.19.0",
    "Jinja2>=3.1.0",
    "MarkupSafe>=3.0.0",
    "orjson>=3.10.0",
    "typing-extensions>=4.13.0",
    "annotated-types>=0.7.0",
    "pydantic-core>=2.33.0",
    "sniffio>=1.3.0",
    "anyio>=4.9.0",
    "h11>=0.16.0",
    "httpcore>=1.0.0",
    "starlette>=0.46.0",
    "safehttpx>=0.1.0",
    "groovy>=0.1.0",
    "gradio-client>=1.10.0",
    "narwhals>=1.40.0",
    "skops>=0.11.0",
    "toolwrapper>=2.1.0",
    "semantic-version>=2.10.0",
    "openfile>=0.0.7",
    "dtw-python>=1.5.0",
    "mosestokenizer>=1.2.0",
    "wtpsplit>=2.1.0",
    "tiktoken>=0.9.0",
    "flatbuffers>=25.2.0",
    "onnxruntime>=1.22.0",
    "mlx>=0.25.0",
    "mlx-whisper>=0.4.0",
    "soxr>=0.5.0",
    "adapters>=1.2.0",
    "cached-property>=2.0.0",
    "cffi>=1.17.0",
    "coloredlogs>=15.0.0",
    "Cython>=3.1.0",
    "dnspython>=2.7.0",
    "docopt>=0.6.0",
    "google-crc32c>=1.7.0",
    "humanfriendly>=10.0.0",
    "ifaddr>=0.2.0",
    "msgpack>=1.1.0",
    "openai-whisper>=20240930",
    "pycparser>=2.22.0",
    "pyee>=13.0.0",
    "pyOpenSSL>=25.1.0",
    "pyparsing>=3.2.0",
    "PyYAML>=6.0.0",
    "regex>=2024.11.0",
    "ruff>=0.11.0",
    "shellingham>=1.5.0",
    "tabulate>=0.9.0",
    "tzdata>=2025.2.0",
    "uctools>=1.3.0",
    "typing-inspection>=0.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ruff>=0.11.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/asr-interface"
Documentation = "https://asr-interface.readthedocs.io"
Repository = "https://github.com/your-username/asr-interface.git"
Issues = "https://github.com/your-username/asr-interface/issues"

[project.scripts]
asr-interface = "asr_interface.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["asr_interface"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["asr_interface"]
target_version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=asr_interface",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["asr_interface"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 